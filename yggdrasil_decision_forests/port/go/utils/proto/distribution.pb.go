//
// Copyright 2022 Google LLC.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Proto version of the C++ distribution classes.
//
// These protos are used for workers network communication and model storage.
//
// Note: Unless specified otherwise (i.e. sparse), "Integer distribution" always
// assume dense positive integers.
// See the documentation of the corresponding classes in distribution.h.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.4
// source: yggdrasil_decision_forests/utils/distribution.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents the (discrete) probability distribution of a random variable with
// natural (i.e. integer greater of equal to zero) support: counts[i]/sum is the
// probability of observation of i.
type IntegerDistributionDouble struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [required]
	Counts []float64 `protobuf:"fixed64,1,rep,packed,name=counts" json:"counts,omitempty"`
	// [required]
	Sum *float64 `protobuf:"fixed64,2,opt,name=sum" json:"sum,omitempty"`
}

func (x *IntegerDistributionDouble) Reset() {
	*x = IntegerDistributionDouble{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_utils_distribution_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegerDistributionDouble) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegerDistributionDouble) ProtoMessage() {}

func (x *IntegerDistributionDouble) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_utils_distribution_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegerDistributionDouble.ProtoReflect.Descriptor instead.
func (*IntegerDistributionDouble) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_utils_distribution_proto_rawDescGZIP(), []int{0}
}

func (x *IntegerDistributionDouble) GetCounts() []float64 {
	if x != nil {
		return x.Counts
	}
	return nil
}

func (x *IntegerDistributionDouble) GetSum() float64 {
	if x != nil && x.Sum != nil {
		return *x.Sum
	}
	return 0
}

type IntegerDistributionFloat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [required]
	Counts []float32 `protobuf:"fixed32,1,rep,packed,name=counts" json:"counts,omitempty"`
	// [required]
	Sum *float32 `protobuf:"fixed32,2,opt,name=sum" json:"sum,omitempty"`
}

func (x *IntegerDistributionFloat) Reset() {
	*x = IntegerDistributionFloat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_utils_distribution_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegerDistributionFloat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegerDistributionFloat) ProtoMessage() {}

func (x *IntegerDistributionFloat) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_utils_distribution_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegerDistributionFloat.ProtoReflect.Descriptor instead.
func (*IntegerDistributionFloat) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_utils_distribution_proto_rawDescGZIP(), []int{1}
}

func (x *IntegerDistributionFloat) GetCounts() []float32 {
	if x != nil {
		return x.Counts
	}
	return nil
}

func (x *IntegerDistributionFloat) GetSum() float32 {
	if x != nil && x.Sum != nil {
		return *x.Sum
	}
	return 0
}

type IntegerDistributionInt64 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [required]
	Counts []int64 `protobuf:"varint,1,rep,packed,name=counts" json:"counts,omitempty"`
	// [required]
	Sum *int64 `protobuf:"varint,2,opt,name=sum" json:"sum,omitempty"`
}

func (x *IntegerDistributionInt64) Reset() {
	*x = IntegerDistributionInt64{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_utils_distribution_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegerDistributionInt64) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegerDistributionInt64) ProtoMessage() {}

func (x *IntegerDistributionInt64) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_utils_distribution_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegerDistributionInt64.ProtoReflect.Descriptor instead.
func (*IntegerDistributionInt64) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_utils_distribution_proto_rawDescGZIP(), []int{2}
}

func (x *IntegerDistributionInt64) GetCounts() []int64 {
	if x != nil {
		return x.Counts
	}
	return nil
}

func (x *IntegerDistributionInt64) GetSum() int64 {
	if x != nil && x.Sum != nil {
		return *x.Sum
	}
	return 0
}

// Describe a 1d normal distribution.
type NormalDistributionDouble struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [required]
	Sum *float64 `protobuf:"fixed64,1,opt,name=sum" json:"sum,omitempty"`
	// [required]
	SumSquares *float64 `protobuf:"fixed64,2,opt,name=sum_squares,json=sumSquares" json:"sum_squares,omitempty"`
	// [required]
	Count *float64 `protobuf:"fixed64,3,opt,name=count" json:"count,omitempty"`
}

func (x *NormalDistributionDouble) Reset() {
	*x = NormalDistributionDouble{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_utils_distribution_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NormalDistributionDouble) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NormalDistributionDouble) ProtoMessage() {}

func (x *NormalDistributionDouble) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_utils_distribution_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NormalDistributionDouble.ProtoReflect.Descriptor instead.
func (*NormalDistributionDouble) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_utils_distribution_proto_rawDescGZIP(), []int{3}
}

func (x *NormalDistributionDouble) GetSum() float64 {
	if x != nil && x.Sum != nil {
		return *x.Sum
	}
	return 0
}

func (x *NormalDistributionDouble) GetSumSquares() float64 {
	if x != nil && x.SumSquares != nil {
		return *x.SumSquares
	}
	return 0
}

func (x *NormalDistributionDouble) GetCount() float64 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

// Confusion matrix between two integer distributions.
type IntegersConfusionMatrixDouble struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Contains nrow x ncol elements. Low column indexed i.e. the second element
	// is counts[1,0].
	// [required]
	Counts []float64 `protobuf:"fixed64,1,rep,packed,name=counts" json:"counts,omitempty"`
	// [required]
	Sum *float64 `protobuf:"fixed64,2,opt,name=sum" json:"sum,omitempty"`
	// [required]
	Nrow *int32 `protobuf:"varint,3,opt,name=nrow" json:"nrow,omitempty"`
	// [required]
	Ncol *int32 `protobuf:"varint,4,opt,name=ncol" json:"ncol,omitempty"`
}

func (x *IntegersConfusionMatrixDouble) Reset() {
	*x = IntegersConfusionMatrixDouble{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_utils_distribution_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegersConfusionMatrixDouble) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegersConfusionMatrixDouble) ProtoMessage() {}

func (x *IntegersConfusionMatrixDouble) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_utils_distribution_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegersConfusionMatrixDouble.ProtoReflect.Descriptor instead.
func (*IntegersConfusionMatrixDouble) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_utils_distribution_proto_rawDescGZIP(), []int{4}
}

func (x *IntegersConfusionMatrixDouble) GetCounts() []float64 {
	if x != nil {
		return x.Counts
	}
	return nil
}

func (x *IntegersConfusionMatrixDouble) GetSum() float64 {
	if x != nil && x.Sum != nil {
		return *x.Sum
	}
	return 0
}

func (x *IntegersConfusionMatrixDouble) GetNrow() int32 {
	if x != nil && x.Nrow != nil {
		return *x.Nrow
	}
	return 0
}

func (x *IntegersConfusionMatrixDouble) GetNcol() int32 {
	if x != nil && x.Ncol != nil {
		return *x.Ncol
	}
	return 0
}

var File_yggdrasil_decision_forests_utils_distribution_proto protoreflect.FileDescriptor

var file_yggdrasil_decision_forests_utils_distribution_proto_rawDesc = []byte{
	0x0a, 0x33, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x75, 0x74, 0x69,
	0x6c, 0x73, 0x2f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x26, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69, 0x6c,
	0x5f, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74,
	0x73, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x49, 0x0a,
	0x19, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x06, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x01, 0x42, 0x02, 0x10, 0x01, 0x52, 0x06,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x22, 0x48, 0x0a, 0x18, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x65, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x6c, 0x6f, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x02, 0x42, 0x02, 0x10, 0x01, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x73,
	0x75, 0x6d, 0x22, 0x48, 0x0a, 0x18, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x44, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x1a,
	0x0a, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x42, 0x02,
	0x10, 0x01, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x22, 0x63, 0x0a, 0x18,
	0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x75,
	0x6d, 0x5f, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0a, 0x73, 0x75, 0x6d, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x75, 0x0a, 0x1d, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x44, 0x6f, 0x75, 0x62,
	0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x01, 0x42, 0x02, 0x10, 0x01, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x75, 0x6d,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x72, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x6e, 0x72, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x63, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x6e, 0x63, 0x6f, 0x6c,
}

var (
	file_yggdrasil_decision_forests_utils_distribution_proto_rawDescOnce sync.Once
	file_yggdrasil_decision_forests_utils_distribution_proto_rawDescData = file_yggdrasil_decision_forests_utils_distribution_proto_rawDesc
)

func file_yggdrasil_decision_forests_utils_distribution_proto_rawDescGZIP() []byte {
	file_yggdrasil_decision_forests_utils_distribution_proto_rawDescOnce.Do(func() {
		file_yggdrasil_decision_forests_utils_distribution_proto_rawDescData = protoimpl.X.CompressGZIP(file_yggdrasil_decision_forests_utils_distribution_proto_rawDescData)
	})
	return file_yggdrasil_decision_forests_utils_distribution_proto_rawDescData
}

var file_yggdrasil_decision_forests_utils_distribution_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_yggdrasil_decision_forests_utils_distribution_proto_goTypes = []interface{}{
	(*IntegerDistributionDouble)(nil),     // 0: yggdrasil_decision_forests.utils.proto.IntegerDistributionDouble
	(*IntegerDistributionFloat)(nil),      // 1: yggdrasil_decision_forests.utils.proto.IntegerDistributionFloat
	(*IntegerDistributionInt64)(nil),      // 2: yggdrasil_decision_forests.utils.proto.IntegerDistributionInt64
	(*NormalDistributionDouble)(nil),      // 3: yggdrasil_decision_forests.utils.proto.NormalDistributionDouble
	(*IntegersConfusionMatrixDouble)(nil), // 4: yggdrasil_decision_forests.utils.proto.IntegersConfusionMatrixDouble
}
var file_yggdrasil_decision_forests_utils_distribution_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_yggdrasil_decision_forests_utils_distribution_proto_init() }
func file_yggdrasil_decision_forests_utils_distribution_proto_init() {
	if File_yggdrasil_decision_forests_utils_distribution_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yggdrasil_decision_forests_utils_distribution_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegerDistributionDouble); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yggdrasil_decision_forests_utils_distribution_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegerDistributionFloat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yggdrasil_decision_forests_utils_distribution_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegerDistributionInt64); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yggdrasil_decision_forests_utils_distribution_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NormalDistributionDouble); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yggdrasil_decision_forests_utils_distribution_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegersConfusionMatrixDouble); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yggdrasil_decision_forests_utils_distribution_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yggdrasil_decision_forests_utils_distribution_proto_goTypes,
		DependencyIndexes: file_yggdrasil_decision_forests_utils_distribution_proto_depIdxs,
		MessageInfos:      file_yggdrasil_decision_forests_utils_distribution_proto_msgTypes,
	}.Build()
	File_yggdrasil_decision_forests_utils_distribution_proto = out.File
	file_yggdrasil_decision_forests_utils_distribution_proto_rawDesc = nil
	file_yggdrasil_decision_forests_utils_distribution_proto_goTypes = nil
	file_yggdrasil_decision_forests_utils_distribution_proto_depIdxs = nil
}
