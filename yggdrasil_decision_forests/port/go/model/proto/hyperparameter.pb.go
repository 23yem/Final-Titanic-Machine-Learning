//
// Copyright 2022 Google LLC.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.4
// source: yggdrasil_decision_forests/model/hyperparameter.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Generic hyper parameters of a learner.
//
// Learner hyper parameters are normally provided through the "TrainingConfig"
// proto extended by each learner. The "Generic hyper parameters" (the following
// message) is a parallel solution to specify the hyper parameters of a learner
// using a list of key-values.
//
// The "Generic hyper parameters" are designed for the interfacing with
// hyper-parameter optimization algorithms, while the "TrainingConfig" proto is
// designed for direct user input. For this reason, the generic hyper parameters
// are not guaranteed to be as expressive as the "TrainingConfig".
// However, the default values of the "Generic hyper parameters" are guaranteed
// to be equivalent to the default value of the training config.
type GenericHyperParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []*GenericHyperParameters_Field `protobuf:"bytes,1,rep,name=fields" json:"fields,omitempty"`
	// Unique id of the parameters.
	// Might be missing if the parameters are generated by a user, or by a
	// AbstractOptimizer that does not require ids.
	Id *int64 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
}

func (x *GenericHyperParameters) Reset() {
	*x = GenericHyperParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericHyperParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericHyperParameters) ProtoMessage() {}

func (x *GenericHyperParameters) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericHyperParameters.ProtoReflect.Descriptor instead.
func (*GenericHyperParameters) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_model_hyperparameter_proto_rawDescGZIP(), []int{0}
}

func (x *GenericHyperParameters) GetFields() []*GenericHyperParameters_Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *GenericHyperParameters) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

// Definition of the type, possible values and default values of the generic
// hyper parameters of a learner. Also contains some documentation (free text +
// links).
type GenericHyperParameterSpecification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Individual fields / hyper-parameters.
	// Also contains the per-fields documentation.
	Fields map[string]*GenericHyperParameterSpecification_Value `protobuf:"bytes,1,rep,name=fields" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Documentation for the entire learner.
	Documentation *GenericHyperParameterSpecification_LearnerDocumentation `protobuf:"bytes,2,opt,name=documentation" json:"documentation,omitempty"`
}

func (x *GenericHyperParameterSpecification) Reset() {
	*x = GenericHyperParameterSpecification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericHyperParameterSpecification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericHyperParameterSpecification) ProtoMessage() {}

func (x *GenericHyperParameterSpecification) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericHyperParameterSpecification.ProtoReflect.Descriptor instead.
func (*GenericHyperParameterSpecification) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_model_hyperparameter_proto_rawDescGZIP(), []int{1}
}

func (x *GenericHyperParameterSpecification) GetFields() map[string]*GenericHyperParameterSpecification_Value {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *GenericHyperParameterSpecification) GetDocumentation() *GenericHyperParameterSpecification_LearnerDocumentation {
	if x != nil {
		return x.Documentation
	}
	return nil
}

// Set of hyper-parameter-sets aka. hyper-parameter search space.
type HyperParameterSpace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []*HyperParameterSpace_Field `protobuf:"bytes,1,rep,name=fields" json:"fields,omitempty"`
}

func (x *HyperParameterSpace) Reset() {
	*x = HyperParameterSpace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperParameterSpace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperParameterSpace) ProtoMessage() {}

func (x *HyperParameterSpace) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperParameterSpace.ProtoReflect.Descriptor instead.
func (*HyperParameterSpace) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_model_hyperparameter_proto_rawDescGZIP(), []int{2}
}

func (x *HyperParameterSpace) GetFields() []*HyperParameterSpace_Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

type GenericHyperParameters_Field struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Hyper parameter name. Should match the "name" of the hyper parameter
	// specification.
	Name  *string                       `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value *GenericHyperParameters_Value `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *GenericHyperParameters_Field) Reset() {
	*x = GenericHyperParameters_Field{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericHyperParameters_Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericHyperParameters_Field) ProtoMessage() {}

func (x *GenericHyperParameters_Field) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericHyperParameters_Field.ProtoReflect.Descriptor instead.
func (*GenericHyperParameters_Field) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_model_hyperparameter_proto_rawDescGZIP(), []int{0, 0}
}

func (x *GenericHyperParameters_Field) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GenericHyperParameters_Field) GetValue() *GenericHyperParameters_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type GenericHyperParameters_Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Hyper parameter value. Should match the type defined in the hyper
	// parameter specification.
	//
	// Types that are assignable to Type:
	//	*GenericHyperParameters_Value_Categorical
	//	*GenericHyperParameters_Value_Integer
	//	*GenericHyperParameters_Value_Real
	//	*GenericHyperParameters_Value_CategoricalList_
	Type isGenericHyperParameters_Value_Type `protobuf_oneof:"Type"`
}

func (x *GenericHyperParameters_Value) Reset() {
	*x = GenericHyperParameters_Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericHyperParameters_Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericHyperParameters_Value) ProtoMessage() {}

func (x *GenericHyperParameters_Value) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericHyperParameters_Value.ProtoReflect.Descriptor instead.
func (*GenericHyperParameters_Value) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_model_hyperparameter_proto_rawDescGZIP(), []int{0, 1}
}

func (m *GenericHyperParameters_Value) GetType() isGenericHyperParameters_Value_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *GenericHyperParameters_Value) GetCategorical() string {
	if x, ok := x.GetType().(*GenericHyperParameters_Value_Categorical); ok {
		return x.Categorical
	}
	return ""
}

func (x *GenericHyperParameters_Value) GetInteger() int32 {
	if x, ok := x.GetType().(*GenericHyperParameters_Value_Integer); ok {
		return x.Integer
	}
	return 0
}

func (x *GenericHyperParameters_Value) GetReal() float64 {
	if x, ok := x.GetType().(*GenericHyperParameters_Value_Real); ok {
		return x.Real
	}
	return 0
}

func (x *GenericHyperParameters_Value) GetCategoricalList() *GenericHyperParameters_Value_CategoricalList {
	if x, ok := x.GetType().(*GenericHyperParameters_Value_CategoricalList_); ok {
		return x.CategoricalList
	}
	return nil
}

type isGenericHyperParameters_Value_Type interface {
	isGenericHyperParameters_Value_Type()
}

type GenericHyperParameters_Value_Categorical struct {
	Categorical string `protobuf:"bytes,2,opt,name=categorical,oneof"`
}

type GenericHyperParameters_Value_Integer struct {
	Integer int32 `protobuf:"varint,3,opt,name=integer,oneof"`
}

type GenericHyperParameters_Value_Real struct {
	Real float64 `protobuf:"fixed64,4,opt,name=real,oneof"`
}

type GenericHyperParameters_Value_CategoricalList_ struct {
	CategoricalList *GenericHyperParameters_Value_CategoricalList `protobuf:"bytes,5,opt,name=categorical_list,json=categoricalList,oneof"`
}

func (*GenericHyperParameters_Value_Categorical) isGenericHyperParameters_Value_Type() {}

func (*GenericHyperParameters_Value_Integer) isGenericHyperParameters_Value_Type() {}

func (*GenericHyperParameters_Value_Real) isGenericHyperParameters_Value_Type() {}

func (*GenericHyperParameters_Value_CategoricalList_) isGenericHyperParameters_Value_Type() {}

type GenericHyperParameters_Value_CategoricalList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []string `protobuf:"bytes,1,rep,name=values" json:"values,omitempty"`
}

func (x *GenericHyperParameters_Value_CategoricalList) Reset() {
	*x = GenericHyperParameters_Value_CategoricalList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericHyperParameters_Value_CategoricalList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericHyperParameters_Value_CategoricalList) ProtoMessage() {}

func (x *GenericHyperParameters_Value_CategoricalList) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericHyperParameters_Value_CategoricalList.ProtoReflect.Descriptor instead.
func (*GenericHyperParameters_Value_CategoricalList) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_model_hyperparameter_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *GenericHyperParameters_Value_CategoricalList) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type GenericHyperParameterSpecification_Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*GenericHyperParameterSpecification_Value_Categorical_
	//	*GenericHyperParameterSpecification_Value_Integer_
	//	*GenericHyperParameterSpecification_Value_Real_
	//	*GenericHyperParameterSpecification_Value_CategoricalList_
	Type          isGenericHyperParameterSpecification_Value_Type         `protobuf_oneof:"Type"`
	Documentation *GenericHyperParameterSpecification_Value_Documentation `protobuf:"bytes,5,opt,name=documentation" json:"documentation,omitempty"`
	// If set, this parameter exist conditionally on other parameter values.
	Conditional *GenericHyperParameterSpecification_Conditional `protobuf:"bytes,7,opt,name=conditional" json:"conditional,omitempty"`
}

func (x *GenericHyperParameterSpecification_Value) Reset() {
	*x = GenericHyperParameterSpecification_Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericHyperParameterSpecification_Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericHyperParameterSpecification_Value) ProtoMessage() {}

func (x *GenericHyperParameterSpecification_Value) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericHyperParameterSpecification_Value.ProtoReflect.Descriptor instead.
func (*GenericHyperParameterSpecification_Value) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_model_hyperparameter_proto_rawDescGZIP(), []int{1, 1}
}

func (m *GenericHyperParameterSpecification_Value) GetType() isGenericHyperParameterSpecification_Value_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *GenericHyperParameterSpecification_Value) GetCategorical() *GenericHyperParameterSpecification_Value_Categorical {
	if x, ok := x.GetType().(*GenericHyperParameterSpecification_Value_Categorical_); ok {
		return x.Categorical
	}
	return nil
}

func (x *GenericHyperParameterSpecification_Value) GetInteger() *GenericHyperParameterSpecification_Value_Integer {
	if x, ok := x.GetType().(*GenericHyperParameterSpecification_Value_Integer_); ok {
		return x.Integer
	}
	return nil
}

func (x *GenericHyperParameterSpecification_Value) GetReal() *GenericHyperParameterSpecification_Value_Real {
	if x, ok := x.GetType().(*GenericHyperParameterSpecification_Value_Real_); ok {
		return x.Real
	}
	return nil
}

func (x *GenericHyperParameterSpecification_Value) GetCategoricalList() *GenericHyperParameterSpecification_Value_CategoricalList {
	if x, ok := x.GetType().(*GenericHyperParameterSpecification_Value_CategoricalList_); ok {
		return x.CategoricalList
	}
	return nil
}

func (x *GenericHyperParameterSpecification_Value) GetDocumentation() *GenericHyperParameterSpecification_Value_Documentation {
	if x != nil {
		return x.Documentation
	}
	return nil
}

func (x *GenericHyperParameterSpecification_Value) GetConditional() *GenericHyperParameterSpecification_Conditional {
	if x != nil {
		return x.Conditional
	}
	return nil
}

type isGenericHyperParameterSpecification_Value_Type interface {
	isGenericHyperParameterSpecification_Value_Type()
}

type GenericHyperParameterSpecification_Value_Categorical_ struct {
	Categorical *GenericHyperParameterSpecification_Value_Categorical `protobuf:"bytes,2,opt,name=categorical,oneof"`
}

type GenericHyperParameterSpecification_Value_Integer_ struct {
	Integer *GenericHyperParameterSpecification_Value_Integer `protobuf:"bytes,3,opt,name=integer,oneof"`
}

type GenericHyperParameterSpecification_Value_Real_ struct {
	Real *GenericHyperParameterSpecification_Value_Real `protobuf:"bytes,4,opt,name=real,oneof"`
}

type GenericHyperParameterSpecification_Value_CategoricalList_ struct {
	CategoricalList *GenericHyperParameterSpecification_Value_CategoricalList `protobuf:"bytes,6,opt,name=categorical_list,json=categoricalList,oneof"`
}

func (*GenericHyperParameterSpecification_Value_Categorical_) isGenericHyperParameterSpecification_Value_Type() {
}

func (*GenericHyperParameterSpecification_Value_Integer_) isGenericHyperParameterSpecification_Value_Type() {
}

func (*GenericHyperParameterSpecification_Value_Real_) isGenericHyperParameterSpecification_Value_Type() {
}

func (*GenericHyperParameterSpecification_Value_CategoricalList_) isGenericHyperParameterSpecification_Value_Type() {
}

// Conditional existence of a parameter.
// A parameter exist iff. the other parameter "control_field" satisfy
// "constraint".
type GenericHyperParameterSpecification_Conditional struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the control parameter.
	ControlField *string `protobuf:"bytes,1,opt,name=control_field,json=controlField" json:"control_field,omitempty"`
	// Constraint on the parent.
	//
	// Types that are assignable to Constraint:
	//	*GenericHyperParameterSpecification_Conditional_Categorical_
	Constraint isGenericHyperParameterSpecification_Conditional_Constraint `protobuf_oneof:"constraint"`
}

func (x *GenericHyperParameterSpecification_Conditional) Reset() {
	*x = GenericHyperParameterSpecification_Conditional{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericHyperParameterSpecification_Conditional) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericHyperParameterSpecification_Conditional) ProtoMessage() {}

func (x *GenericHyperParameterSpecification_Conditional) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericHyperParameterSpecification_Conditional.ProtoReflect.Descriptor instead.
func (*GenericHyperParameterSpecification_Conditional) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_model_hyperparameter_proto_rawDescGZIP(), []int{1, 2}
}

func (x *GenericHyperParameterSpecification_Conditional) GetControlField() string {
	if x != nil && x.ControlField != nil {
		return *x.ControlField
	}
	return ""
}

func (m *GenericHyperParameterSpecification_Conditional) GetConstraint() isGenericHyperParameterSpecification_Conditional_Constraint {
	if m != nil {
		return m.Constraint
	}
	return nil
}

func (x *GenericHyperParameterSpecification_Conditional) GetCategorical() *GenericHyperParameterSpecification_Conditional_Categorical {
	if x, ok := x.GetConstraint().(*GenericHyperParameterSpecification_Conditional_Categorical_); ok {
		return x.Categorical
	}
	return nil
}

type isGenericHyperParameterSpecification_Conditional_Constraint interface {
	isGenericHyperParameterSpecification_Conditional_Constraint()
}

type GenericHyperParameterSpecification_Conditional_Categorical_ struct {
	// One of the following values.
	Categorical *GenericHyperParameterSpecification_Conditional_Categorical `protobuf:"bytes,2,opt,name=categorical,oneof"`
}

func (*GenericHyperParameterSpecification_Conditional_Categorical_) isGenericHyperParameterSpecification_Conditional_Constraint() {
}

// Documentation about the entire learner.
type GenericHyperParameterSpecification_LearnerDocumentation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Free text description of the learning algorithm.
	Description *string `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
}

func (x *GenericHyperParameterSpecification_LearnerDocumentation) Reset() {
	*x = GenericHyperParameterSpecification_LearnerDocumentation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericHyperParameterSpecification_LearnerDocumentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericHyperParameterSpecification_LearnerDocumentation) ProtoMessage() {}

func (x *GenericHyperParameterSpecification_LearnerDocumentation) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericHyperParameterSpecification_LearnerDocumentation.ProtoReflect.Descriptor instead.
func (*GenericHyperParameterSpecification_LearnerDocumentation) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_model_hyperparameter_proto_rawDescGZIP(), []int{1, 3}
}

func (x *GenericHyperParameterSpecification_LearnerDocumentation) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

// Categorical hyper parameter i.e. the hyper parameter takes a values
// from a set of possible values.
type GenericHyperParameterSpecification_Value_Categorical struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PossibleValues []string `protobuf:"bytes,1,rep,name=possible_values,json=possibleValues" json:"possible_values,omitempty"`
	DefaultValue   *string  `protobuf:"bytes,2,opt,name=default_value,json=defaultValue" json:"default_value,omitempty"`
}

func (x *GenericHyperParameterSpecification_Value_Categorical) Reset() {
	*x = GenericHyperParameterSpecification_Value_Categorical{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericHyperParameterSpecification_Value_Categorical) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericHyperParameterSpecification_Value_Categorical) ProtoMessage() {}

func (x *GenericHyperParameterSpecification_Value_Categorical) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericHyperParameterSpecification_Value_Categorical.ProtoReflect.Descriptor instead.
func (*GenericHyperParameterSpecification_Value_Categorical) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_model_hyperparameter_proto_rawDescGZIP(), []int{1, 1, 0}
}

func (x *GenericHyperParameterSpecification_Value_Categorical) GetPossibleValues() []string {
	if x != nil {
		return x.PossibleValues
	}
	return nil
}

func (x *GenericHyperParameterSpecification_Value_Categorical) GetDefaultValue() string {
	if x != nil && x.DefaultValue != nil {
		return *x.DefaultValue
	}
	return ""
}

// List of categorical values.
type GenericHyperParameterSpecification_Value_CategoricalList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GenericHyperParameterSpecification_Value_CategoricalList) Reset() {
	*x = GenericHyperParameterSpecification_Value_CategoricalList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericHyperParameterSpecification_Value_CategoricalList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericHyperParameterSpecification_Value_CategoricalList) ProtoMessage() {}

func (x *GenericHyperParameterSpecification_Value_CategoricalList) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericHyperParameterSpecification_Value_CategoricalList.ProtoReflect.Descriptor instead.
func (*GenericHyperParameterSpecification_Value_CategoricalList) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_model_hyperparameter_proto_rawDescGZIP(), []int{1, 1, 1}
}

// Integer hyper parameter.
type GenericHyperParameterSpecification_Value_Integer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Minimum      *int32 `protobuf:"varint,1,opt,name=minimum" json:"minimum,omitempty"`
	Maximum      *int32 `protobuf:"varint,2,opt,name=maximum" json:"maximum,omitempty"`
	DefaultValue *int32 `protobuf:"varint,3,opt,name=default_value,json=defaultValue" json:"default_value,omitempty"`
}

func (x *GenericHyperParameterSpecification_Value_Integer) Reset() {
	*x = GenericHyperParameterSpecification_Value_Integer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericHyperParameterSpecification_Value_Integer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericHyperParameterSpecification_Value_Integer) ProtoMessage() {}

func (x *GenericHyperParameterSpecification_Value_Integer) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericHyperParameterSpecification_Value_Integer.ProtoReflect.Descriptor instead.
func (*GenericHyperParameterSpecification_Value_Integer) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_model_hyperparameter_proto_rawDescGZIP(), []int{1, 1, 2}
}

func (x *GenericHyperParameterSpecification_Value_Integer) GetMinimum() int32 {
	if x != nil && x.Minimum != nil {
		return *x.Minimum
	}
	return 0
}

func (x *GenericHyperParameterSpecification_Value_Integer) GetMaximum() int32 {
	if x != nil && x.Maximum != nil {
		return *x.Maximum
	}
	return 0
}

func (x *GenericHyperParameterSpecification_Value_Integer) GetDefaultValue() int32 {
	if x != nil && x.DefaultValue != nil {
		return *x.DefaultValue
	}
	return 0
}

// Real hyper parameter.
type GenericHyperParameterSpecification_Value_Real struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Minimum      *float64 `protobuf:"fixed64,1,opt,name=minimum" json:"minimum,omitempty"`
	Maximum      *float64 `protobuf:"fixed64,2,opt,name=maximum" json:"maximum,omitempty"`
	DefaultValue *float64 `protobuf:"fixed64,3,opt,name=default_value,json=defaultValue" json:"default_value,omitempty"`
}

func (x *GenericHyperParameterSpecification_Value_Real) Reset() {
	*x = GenericHyperParameterSpecification_Value_Real{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericHyperParameterSpecification_Value_Real) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericHyperParameterSpecification_Value_Real) ProtoMessage() {}

func (x *GenericHyperParameterSpecification_Value_Real) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericHyperParameterSpecification_Value_Real.ProtoReflect.Descriptor instead.
func (*GenericHyperParameterSpecification_Value_Real) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_model_hyperparameter_proto_rawDescGZIP(), []int{1, 1, 3}
}

func (x *GenericHyperParameterSpecification_Value_Real) GetMinimum() float64 {
	if x != nil && x.Minimum != nil {
		return *x.Minimum
	}
	return 0
}

func (x *GenericHyperParameterSpecification_Value_Real) GetMaximum() float64 {
	if x != nil && x.Maximum != nil {
		return *x.Maximum
	}
	return 0
}

func (x *GenericHyperParameterSpecification_Value_Real) GetDefaultValue() float64 {
	if x != nil && x.DefaultValue != nil {
		return *x.DefaultValue
	}
	return 0
}

// Links to the documentation of the hyper-parameter.
type GenericHyperParameterSpecification_Value_Documentation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Path to the proto relative to simpleML root directory.
	ProtoPath *string `protobuf:"bytes,1,opt,name=proto_path,json=protoPath" json:"proto_path,omitempty"`
	// Name of the proto field. If not specific, use "name" instead.
	ProtoField *string `protobuf:"bytes,2,opt,name=proto_field,json=protoField" json:"proto_field,omitempty"`
	// Free text description of the parameter.
	Description *string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	// When a field is deprecated.
	Deprecated *bool `protobuf:"varint,8,opt,name=deprecated" json:"deprecated,omitempty"`
}

func (x *GenericHyperParameterSpecification_Value_Documentation) Reset() {
	*x = GenericHyperParameterSpecification_Value_Documentation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericHyperParameterSpecification_Value_Documentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericHyperParameterSpecification_Value_Documentation) ProtoMessage() {}

func (x *GenericHyperParameterSpecification_Value_Documentation) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericHyperParameterSpecification_Value_Documentation.ProtoReflect.Descriptor instead.
func (*GenericHyperParameterSpecification_Value_Documentation) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_model_hyperparameter_proto_rawDescGZIP(), []int{1, 1, 4}
}

func (x *GenericHyperParameterSpecification_Value_Documentation) GetProtoPath() string {
	if x != nil && x.ProtoPath != nil {
		return *x.ProtoPath
	}
	return ""
}

func (x *GenericHyperParameterSpecification_Value_Documentation) GetProtoField() string {
	if x != nil && x.ProtoField != nil {
		return *x.ProtoField
	}
	return ""
}

func (x *GenericHyperParameterSpecification_Value_Documentation) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GenericHyperParameterSpecification_Value_Documentation) GetDeprecated() bool {
	if x != nil && x.Deprecated != nil {
		return *x.Deprecated
	}
	return false
}

type GenericHyperParameterSpecification_Conditional_Categorical struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []string `protobuf:"bytes,1,rep,name=values" json:"values,omitempty"`
}

func (x *GenericHyperParameterSpecification_Conditional_Categorical) Reset() {
	*x = GenericHyperParameterSpecification_Conditional_Categorical{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericHyperParameterSpecification_Conditional_Categorical) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericHyperParameterSpecification_Conditional_Categorical) ProtoMessage() {}

func (x *GenericHyperParameterSpecification_Conditional_Categorical) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericHyperParameterSpecification_Conditional_Categorical.ProtoReflect.Descriptor instead.
func (*GenericHyperParameterSpecification_Conditional_Categorical) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_model_hyperparameter_proto_rawDescGZIP(), []int{1, 2, 0}
}

func (x *GenericHyperParameterSpecification_Conditional_Categorical) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type HyperParameterSpace_Field struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the hyper parameter. Should match one of the generic hyper
	// parameter of the model (use "GetGenericHyperParameterSpecification" for
	// the list of generic hyper parameters).
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Definition of the candidate values.
	//
	// Types that are assignable to Type:
	//	*HyperParameterSpace_Field_DiscreteCandidates
	Type isHyperParameterSpace_Field_Type `protobuf_oneof:"Type"`
	// If this field has a parent field, then it is only activated if its
	// parent's value is one of these.
	//
	// Types that are assignable to MatchingParentValues:
	//	*HyperParameterSpace_Field_ParentDiscreteValues
	MatchingParentValues isHyperParameterSpace_Field_MatchingParentValues `protobuf_oneof:"MatchingParentValues"`
	// List of child fields.
	Children []*HyperParameterSpace_Field `protobuf:"bytes,4,rep,name=children" json:"children,omitempty"`
}

func (x *HyperParameterSpace_Field) Reset() {
	*x = HyperParameterSpace_Field{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperParameterSpace_Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperParameterSpace_Field) ProtoMessage() {}

func (x *HyperParameterSpace_Field) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperParameterSpace_Field.ProtoReflect.Descriptor instead.
func (*HyperParameterSpace_Field) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_model_hyperparameter_proto_rawDescGZIP(), []int{2, 0}
}

func (x *HyperParameterSpace_Field) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (m *HyperParameterSpace_Field) GetType() isHyperParameterSpace_Field_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *HyperParameterSpace_Field) GetDiscreteCandidates() *HyperParameterSpace_DiscreteCandidates {
	if x, ok := x.GetType().(*HyperParameterSpace_Field_DiscreteCandidates); ok {
		return x.DiscreteCandidates
	}
	return nil
}

func (m *HyperParameterSpace_Field) GetMatchingParentValues() isHyperParameterSpace_Field_MatchingParentValues {
	if m != nil {
		return m.MatchingParentValues
	}
	return nil
}

func (x *HyperParameterSpace_Field) GetParentDiscreteValues() *HyperParameterSpace_DiscreteCandidates {
	if x, ok := x.GetMatchingParentValues().(*HyperParameterSpace_Field_ParentDiscreteValues); ok {
		return x.ParentDiscreteValues
	}
	return nil
}

func (x *HyperParameterSpace_Field) GetChildren() []*HyperParameterSpace_Field {
	if x != nil {
		return x.Children
	}
	return nil
}

type isHyperParameterSpace_Field_Type interface {
	isHyperParameterSpace_Field_Type()
}

type HyperParameterSpace_Field_DiscreteCandidates struct {
	DiscreteCandidates *HyperParameterSpace_DiscreteCandidates `protobuf:"bytes,2,opt,name=discrete_candidates,json=discreteCandidates,oneof"`
}

func (*HyperParameterSpace_Field_DiscreteCandidates) isHyperParameterSpace_Field_Type() {}

type isHyperParameterSpace_Field_MatchingParentValues interface {
	isHyperParameterSpace_Field_MatchingParentValues()
}

type HyperParameterSpace_Field_ParentDiscreteValues struct {
	ParentDiscreteValues *HyperParameterSpace_DiscreteCandidates `protobuf:"bytes,3,opt,name=parent_discrete_values,json=parentDiscreteValues,oneof"`
}

func (*HyperParameterSpace_Field_ParentDiscreteValues) isHyperParameterSpace_Field_MatchingParentValues() {
}

type HyperParameterSpace_DiscreteCandidates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PossibleValues []*GenericHyperParameters_Value `protobuf:"bytes,1,rep,name=possible_values,json=possibleValues" json:"possible_values,omitempty"`
	// If set, "weights" has the same number of elements as "possible_values".
	// "weights[i]" is the weight of this specific value for the optimizer.
	// Different optimizers can use this weight differently.
	//
	// Random optimizer: Weight of the field during random sampling. If not
	//   specified, all the hyper-parameter combinations have the same
	//   probability of sampling. It means that a possible value with
	//   conditional children will be more likely to be sampled.
	Weights []float64 `protobuf:"fixed64,2,rep,name=weights" json:"weights,omitempty"`
}

func (x *HyperParameterSpace_DiscreteCandidates) Reset() {
	*x = HyperParameterSpace_DiscreteCandidates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperParameterSpace_DiscreteCandidates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperParameterSpace_DiscreteCandidates) ProtoMessage() {}

func (x *HyperParameterSpace_DiscreteCandidates) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperParameterSpace_DiscreteCandidates.ProtoReflect.Descriptor instead.
func (*HyperParameterSpace_DiscreteCandidates) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_model_hyperparameter_proto_rawDescGZIP(), []int{2, 1}
}

func (x *HyperParameterSpace_DiscreteCandidates) GetPossibleValues() []*GenericHyperParameters_Value {
	if x != nil {
		return x.PossibleValues
	}
	return nil
}

func (x *HyperParameterSpace_DiscreteCandidates) GetWeights() []float64 {
	if x != nil {
		return x.Weights
	}
	return nil
}

var File_yggdrasil_decision_forests_model_hyperparameter_proto protoreflect.FileDescriptor

var file_yggdrasil_decision_forests_model_hyperparameter_proto_rawDesc = []byte{
	0x0a, 0x35, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2f, 0x68, 0x79, 0x70, 0x65, 0x72, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x26, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73,
	0x69, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65,
	0x73, 0x74, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x96, 0x04, 0x0a, 0x16, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x48, 0x79, 0x70, 0x65, 0x72,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x5c, 0x0a, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x79, 0x67, 0x67,
	0x64, 0x72, 0x61, 0x73, 0x69, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x48, 0x79, 0x70, 0x65, 0x72,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x77, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x5a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69, 0x6c,
	0x5f, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74,
	0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x69, 0x63, 0x48, 0x79, 0x70, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x1a, 0x94, 0x02, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x22, 0x0a, 0x0b, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x12,
	0x1a, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x04, 0x72,
	0x65, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x04, 0x72, 0x65, 0x61,
	0x6c, 0x12, 0x81, 0x01, 0x0a, 0x10, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x63, 0x61,
	0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x54, 0x2e, 0x79,
	0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x48, 0x79, 0x70,
	0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x4c, 0x69,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x63, 0x61,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x29, 0x0a, 0x0f, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x63, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x42, 0x06, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa9, 0x0f, 0x0a, 0x22, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x69, 0x63, 0x48, 0x79, 0x70, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x6e, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x56, 0x2e, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63,
	0x48, 0x79, 0x70, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12,
	0x85, 0x01, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5f, 0x2e, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61,
	0x73, 0x69, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72,
	0x65, 0x73, 0x74, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x48, 0x79, 0x70, 0x65, 0x72, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x8b, 0x01, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x66, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x79, 0x67, 0x67, 0x64, 0x72,
	0x61, 0x73, 0x69, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f,
	0x72, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x48, 0x79, 0x70, 0x65, 0x72, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xcf, 0x09, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x80, 0x01, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5c, 0x2e, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69,
	0x6c, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73,
	0x74, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x48, 0x79, 0x70, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x63, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x63,
	0x61, 0x6c, 0x12, 0x74, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x58, 0x2e, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69, 0x6c, 0x5f,
	0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x73,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x69, 0x63, 0x48, 0x79, 0x70, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x48, 0x00, 0x52,
	0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x12, 0x6b, 0x0a, 0x04, 0x72, 0x65, 0x61, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x55, 0x2e, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73,
	0x69, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65,
	0x73, 0x74, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x48, 0x79, 0x70, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x6c, 0x48, 0x00, 0x52,
	0x04, 0x72, 0x65, 0x61, 0x6c, 0x12, 0x8d, 0x01, 0x0a, 0x10, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x60, 0x2e, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69, 0x6c, 0x5f, 0x64, 0x65, 0x63,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69,
	0x63, 0x48, 0x79, 0x70, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x4c, 0x69,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x63, 0x61,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x84, 0x01, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5e, 0x2e,
	0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x48, 0x79,
	0x70, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x78, 0x0a, 0x0b,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x56, 0x2e, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69, 0x6c, 0x5f, 0x64, 0x65,
	0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x69, 0x63, 0x48, 0x79, 0x70, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x1a, 0x5b, 0x0a, 0x0b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c,
	0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e,
	0x70, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x1a, 0x11, 0x0a, 0x0f, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x63,
	0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x62, 0x0a, 0x07, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x61,
	0x78, 0x69, 0x6d, 0x75, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x5f, 0x0a, 0x04, 0x52, 0x65,
	0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x6d,
	0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x91, 0x01, 0x0a, 0x0d,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x06, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x1a, 0xf0, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x86, 0x01, 0x0a,
	0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x62, 0x2e, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69, 0x6c, 0x5f, 0x64,
	0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x73, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x69, 0x63, 0x48, 0x79, 0x70, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x69, 0x63, 0x61, 0x6c, 0x1a, 0x25, 0x0a, 0x0b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x63, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x0c, 0x0a, 0x0a,
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x1a, 0x38, 0x0a, 0x14, 0x4c, 0x65,
	0x61, 0x72, 0x6e, 0x65, 0x72, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xba, 0x05, 0x0a, 0x13, 0x48, 0x79, 0x70, 0x65, 0x72, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x59, 0x0a, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x79,
	0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x53, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a, 0xa7, 0x03, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x13, 0x64, 0x69, 0x73, 0x63, 0x72, 0x65,
	0x74, 0x65, 0x5f, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69, 0x6c, 0x5f,
	0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x73,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x79, 0x70,
	0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x2e, 0x44, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x73, 0x48, 0x00, 0x52, 0x12, 0x64, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65, 0x43,
	0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x86, 0x01, 0x0a, 0x16, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x79, 0x67, 0x67,
	0x64, 0x72, 0x61, 0x73, 0x69, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x53, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65,
	0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x48, 0x01, 0x52, 0x14, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x12, 0x5d, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69, 0x6c,
	0x5f, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74,
	0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x79,
	0x70, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x42, 0x06, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x42, 0x16, 0x0a, 0x14, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x1a, 0x9d, 0x01, 0x0a, 0x12, 0x44, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65, 0x43, 0x61,
	0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x6d, 0x0a, 0x0f, 0x70, 0x6f, 0x73, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x44, 0x2e, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69, 0x6c, 0x5f, 0x64, 0x65,
	0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x69, 0x63, 0x48, 0x79, 0x70, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x70, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x01, 0x52, 0x07, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x73,
}

var (
	file_yggdrasil_decision_forests_model_hyperparameter_proto_rawDescOnce sync.Once
	file_yggdrasil_decision_forests_model_hyperparameter_proto_rawDescData = file_yggdrasil_decision_forests_model_hyperparameter_proto_rawDesc
)

func file_yggdrasil_decision_forests_model_hyperparameter_proto_rawDescGZIP() []byte {
	file_yggdrasil_decision_forests_model_hyperparameter_proto_rawDescOnce.Do(func() {
		file_yggdrasil_decision_forests_model_hyperparameter_proto_rawDescData = protoimpl.X.CompressGZIP(file_yggdrasil_decision_forests_model_hyperparameter_proto_rawDescData)
	})
	return file_yggdrasil_decision_forests_model_hyperparameter_proto_rawDescData
}

var file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_yggdrasil_decision_forests_model_hyperparameter_proto_goTypes = []interface{}{
	(*GenericHyperParameters)(nil),                       // 0: yggdrasil_decision_forests.model.proto.GenericHyperParameters
	(*GenericHyperParameterSpecification)(nil),           // 1: yggdrasil_decision_forests.model.proto.GenericHyperParameterSpecification
	(*HyperParameterSpace)(nil),                          // 2: yggdrasil_decision_forests.model.proto.HyperParameterSpace
	(*GenericHyperParameters_Field)(nil),                 // 3: yggdrasil_decision_forests.model.proto.GenericHyperParameters.Field
	(*GenericHyperParameters_Value)(nil),                 // 4: yggdrasil_decision_forests.model.proto.GenericHyperParameters.Value
	(*GenericHyperParameters_Value_CategoricalList)(nil), // 5: yggdrasil_decision_forests.model.proto.GenericHyperParameters.Value.CategoricalList
	nil, // 6: yggdrasil_decision_forests.model.proto.GenericHyperParameterSpecification.FieldsEntry
	(*GenericHyperParameterSpecification_Value)(nil),                   // 7: yggdrasil_decision_forests.model.proto.GenericHyperParameterSpecification.Value
	(*GenericHyperParameterSpecification_Conditional)(nil),             // 8: yggdrasil_decision_forests.model.proto.GenericHyperParameterSpecification.Conditional
	(*GenericHyperParameterSpecification_LearnerDocumentation)(nil),    // 9: yggdrasil_decision_forests.model.proto.GenericHyperParameterSpecification.LearnerDocumentation
	(*GenericHyperParameterSpecification_Value_Categorical)(nil),       // 10: yggdrasil_decision_forests.model.proto.GenericHyperParameterSpecification.Value.Categorical
	(*GenericHyperParameterSpecification_Value_CategoricalList)(nil),   // 11: yggdrasil_decision_forests.model.proto.GenericHyperParameterSpecification.Value.CategoricalList
	(*GenericHyperParameterSpecification_Value_Integer)(nil),           // 12: yggdrasil_decision_forests.model.proto.GenericHyperParameterSpecification.Value.Integer
	(*GenericHyperParameterSpecification_Value_Real)(nil),              // 13: yggdrasil_decision_forests.model.proto.GenericHyperParameterSpecification.Value.Real
	(*GenericHyperParameterSpecification_Value_Documentation)(nil),     // 14: yggdrasil_decision_forests.model.proto.GenericHyperParameterSpecification.Value.Documentation
	(*GenericHyperParameterSpecification_Conditional_Categorical)(nil), // 15: yggdrasil_decision_forests.model.proto.GenericHyperParameterSpecification.Conditional.Categorical
	(*HyperParameterSpace_Field)(nil),                                  // 16: yggdrasil_decision_forests.model.proto.HyperParameterSpace.Field
	(*HyperParameterSpace_DiscreteCandidates)(nil),                     // 17: yggdrasil_decision_forests.model.proto.HyperParameterSpace.DiscreteCandidates
}
var file_yggdrasil_decision_forests_model_hyperparameter_proto_depIdxs = []int32{
	3,  // 0: yggdrasil_decision_forests.model.proto.GenericHyperParameters.fields:type_name -> yggdrasil_decision_forests.model.proto.GenericHyperParameters.Field
	6,  // 1: yggdrasil_decision_forests.model.proto.GenericHyperParameterSpecification.fields:type_name -> yggdrasil_decision_forests.model.proto.GenericHyperParameterSpecification.FieldsEntry
	9,  // 2: yggdrasil_decision_forests.model.proto.GenericHyperParameterSpecification.documentation:type_name -> yggdrasil_decision_forests.model.proto.GenericHyperParameterSpecification.LearnerDocumentation
	16, // 3: yggdrasil_decision_forests.model.proto.HyperParameterSpace.fields:type_name -> yggdrasil_decision_forests.model.proto.HyperParameterSpace.Field
	4,  // 4: yggdrasil_decision_forests.model.proto.GenericHyperParameters.Field.value:type_name -> yggdrasil_decision_forests.model.proto.GenericHyperParameters.Value
	5,  // 5: yggdrasil_decision_forests.model.proto.GenericHyperParameters.Value.categorical_list:type_name -> yggdrasil_decision_forests.model.proto.GenericHyperParameters.Value.CategoricalList
	7,  // 6: yggdrasil_decision_forests.model.proto.GenericHyperParameterSpecification.FieldsEntry.value:type_name -> yggdrasil_decision_forests.model.proto.GenericHyperParameterSpecification.Value
	10, // 7: yggdrasil_decision_forests.model.proto.GenericHyperParameterSpecification.Value.categorical:type_name -> yggdrasil_decision_forests.model.proto.GenericHyperParameterSpecification.Value.Categorical
	12, // 8: yggdrasil_decision_forests.model.proto.GenericHyperParameterSpecification.Value.integer:type_name -> yggdrasil_decision_forests.model.proto.GenericHyperParameterSpecification.Value.Integer
	13, // 9: yggdrasil_decision_forests.model.proto.GenericHyperParameterSpecification.Value.real:type_name -> yggdrasil_decision_forests.model.proto.GenericHyperParameterSpecification.Value.Real
	11, // 10: yggdrasil_decision_forests.model.proto.GenericHyperParameterSpecification.Value.categorical_list:type_name -> yggdrasil_decision_forests.model.proto.GenericHyperParameterSpecification.Value.CategoricalList
	14, // 11: yggdrasil_decision_forests.model.proto.GenericHyperParameterSpecification.Value.documentation:type_name -> yggdrasil_decision_forests.model.proto.GenericHyperParameterSpecification.Value.Documentation
	8,  // 12: yggdrasil_decision_forests.model.proto.GenericHyperParameterSpecification.Value.conditional:type_name -> yggdrasil_decision_forests.model.proto.GenericHyperParameterSpecification.Conditional
	15, // 13: yggdrasil_decision_forests.model.proto.GenericHyperParameterSpecification.Conditional.categorical:type_name -> yggdrasil_decision_forests.model.proto.GenericHyperParameterSpecification.Conditional.Categorical
	17, // 14: yggdrasil_decision_forests.model.proto.HyperParameterSpace.Field.discrete_candidates:type_name -> yggdrasil_decision_forests.model.proto.HyperParameterSpace.DiscreteCandidates
	17, // 15: yggdrasil_decision_forests.model.proto.HyperParameterSpace.Field.parent_discrete_values:type_name -> yggdrasil_decision_forests.model.proto.HyperParameterSpace.DiscreteCandidates
	16, // 16: yggdrasil_decision_forests.model.proto.HyperParameterSpace.Field.children:type_name -> yggdrasil_decision_forests.model.proto.HyperParameterSpace.Field
	4,  // 17: yggdrasil_decision_forests.model.proto.HyperParameterSpace.DiscreteCandidates.possible_values:type_name -> yggdrasil_decision_forests.model.proto.GenericHyperParameters.Value
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_yggdrasil_decision_forests_model_hyperparameter_proto_init() }
func file_yggdrasil_decision_forests_model_hyperparameter_proto_init() {
	if File_yggdrasil_decision_forests_model_hyperparameter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericHyperParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericHyperParameterSpecification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HyperParameterSpace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericHyperParameters_Field); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericHyperParameters_Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericHyperParameters_Value_CategoricalList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericHyperParameterSpecification_Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericHyperParameterSpecification_Conditional); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericHyperParameterSpecification_LearnerDocumentation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericHyperParameterSpecification_Value_Categorical); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericHyperParameterSpecification_Value_CategoricalList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericHyperParameterSpecification_Value_Integer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericHyperParameterSpecification_Value_Real); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericHyperParameterSpecification_Value_Documentation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericHyperParameterSpecification_Conditional_Categorical); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HyperParameterSpace_Field); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HyperParameterSpace_DiscreteCandidates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*GenericHyperParameters_Value_Categorical)(nil),
		(*GenericHyperParameters_Value_Integer)(nil),
		(*GenericHyperParameters_Value_Real)(nil),
		(*GenericHyperParameters_Value_CategoricalList_)(nil),
	}
	file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*GenericHyperParameterSpecification_Value_Categorical_)(nil),
		(*GenericHyperParameterSpecification_Value_Integer_)(nil),
		(*GenericHyperParameterSpecification_Value_Real_)(nil),
		(*GenericHyperParameterSpecification_Value_CategoricalList_)(nil),
	}
	file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*GenericHyperParameterSpecification_Conditional_Categorical_)(nil),
	}
	file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*HyperParameterSpace_Field_DiscreteCandidates)(nil),
		(*HyperParameterSpace_Field_ParentDiscreteValues)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yggdrasil_decision_forests_model_hyperparameter_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yggdrasil_decision_forests_model_hyperparameter_proto_goTypes,
		DependencyIndexes: file_yggdrasil_decision_forests_model_hyperparameter_proto_depIdxs,
		MessageInfos:      file_yggdrasil_decision_forests_model_hyperparameter_proto_msgTypes,
	}.Build()
	File_yggdrasil_decision_forests_model_hyperparameter_proto = out.File
	file_yggdrasil_decision_forests_model_hyperparameter_proto_rawDesc = nil
	file_yggdrasil_decision_forests_model_hyperparameter_proto_goTypes = nil
	file_yggdrasil_decision_forests_model_hyperparameter_proto_depIdxs = nil
}
