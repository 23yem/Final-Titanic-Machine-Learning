//
// Copyright 2022 Google LLC.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.4
// source: yggdrasil_decision_forests/model/prediction.proto

package proto

import (
	proto "github.com/google/yggdrasil-decision-forests/yggdrasil_decision_forests/port/go/utils/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Generic prediction (prediction over a single example). Those are usually the
// output of a ML model.
//
// Optionally, it may contains the ground truth (e.g. the label value). When the
// ground truth is present, such a "Prediction" proto can be used for evaluation
// (see "metric.h").
//
type Prediction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*Prediction_Classification_
	//	*Prediction_Regression_
	//	*Prediction_Ranking_
	//	*Prediction_Uplift_
	Type   isPrediction_Type `protobuf_oneof:"type"`
	Weight *float32          `protobuf:"fixed32,3,opt,name=weight,def=1" json:"weight,omitempty"`
	// Identifier about the example.
	ExampleKey *string `protobuf:"bytes,4,opt,name=example_key,json=exampleKey" json:"example_key,omitempty"`
}

// Default values for Prediction fields.
const (
	Default_Prediction_Weight = float32(1)
)

func (x *Prediction) Reset() {
	*x = Prediction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_model_prediction_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Prediction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prediction) ProtoMessage() {}

func (x *Prediction) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_model_prediction_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prediction.ProtoReflect.Descriptor instead.
func (*Prediction) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_model_prediction_proto_rawDescGZIP(), []int{0}
}

func (m *Prediction) GetType() isPrediction_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Prediction) GetClassification() *Prediction_Classification {
	if x, ok := x.GetType().(*Prediction_Classification_); ok {
		return x.Classification
	}
	return nil
}

func (x *Prediction) GetRegression() *Prediction_Regression {
	if x, ok := x.GetType().(*Prediction_Regression_); ok {
		return x.Regression
	}
	return nil
}

func (x *Prediction) GetRanking() *Prediction_Ranking {
	if x, ok := x.GetType().(*Prediction_Ranking_); ok {
		return x.Ranking
	}
	return nil
}

func (x *Prediction) GetUplift() *Prediction_Uplift {
	if x, ok := x.GetType().(*Prediction_Uplift_); ok {
		return x.Uplift
	}
	return nil
}

func (x *Prediction) GetWeight() float32 {
	if x != nil && x.Weight != nil {
		return *x.Weight
	}
	return Default_Prediction_Weight
}

func (x *Prediction) GetExampleKey() string {
	if x != nil && x.ExampleKey != nil {
		return *x.ExampleKey
	}
	return ""
}

type isPrediction_Type interface {
	isPrediction_Type()
}

type Prediction_Classification_ struct {
	Classification *Prediction_Classification `protobuf:"bytes,1,opt,name=classification,oneof"`
}

type Prediction_Regression_ struct {
	Regression *Prediction_Regression `protobuf:"bytes,2,opt,name=regression,oneof"`
}

type Prediction_Ranking_ struct {
	Ranking *Prediction_Ranking `protobuf:"bytes,5,opt,name=ranking,oneof"`
}

type Prediction_Uplift_ struct {
	Uplift *Prediction_Uplift `protobuf:"bytes,6,opt,name=uplift,oneof"`
}

func (*Prediction_Classification_) isPrediction_Type() {}

func (*Prediction_Regression_) isPrediction_Type() {}

func (*Prediction_Ranking_) isPrediction_Type() {}

func (*Prediction_Uplift_) isPrediction_Type() {}

type Prediction_Classification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Predicted class as indexed in the dataspec.
	Value *int32 `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
	// Predicted distribution over the possible classes. If specified, the
	// following relation holds: "value == argmax_i(distribution[i])".
	Distribution *proto.IntegerDistributionFloat `protobuf:"bytes,2,opt,name=distribution" json:"distribution,omitempty"`
	GroundTruth  *int32                          `protobuf:"varint,3,opt,name=ground_truth,json=groundTruth" json:"ground_truth,omitempty"`
}

func (x *Prediction_Classification) Reset() {
	*x = Prediction_Classification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_model_prediction_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Prediction_Classification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prediction_Classification) ProtoMessage() {}

func (x *Prediction_Classification) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_model_prediction_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prediction_Classification.ProtoReflect.Descriptor instead.
func (*Prediction_Classification) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_model_prediction_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Prediction_Classification) GetValue() int32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *Prediction_Classification) GetDistribution() *proto.IntegerDistributionFloat {
	if x != nil {
		return x.Distribution
	}
	return nil
}

func (x *Prediction_Classification) GetGroundTruth() int32 {
	if x != nil && x.GroundTruth != nil {
		return *x.GroundTruth
	}
	return 0
}

type Prediction_Regression struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value       *float32 `protobuf:"fixed32,1,opt,name=value" json:"value,omitempty"`
	GroundTruth *float32 `protobuf:"fixed32,2,opt,name=ground_truth,json=groundTruth" json:"ground_truth,omitempty"`
}

func (x *Prediction_Regression) Reset() {
	*x = Prediction_Regression{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_model_prediction_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Prediction_Regression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prediction_Regression) ProtoMessage() {}

func (x *Prediction_Regression) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_model_prediction_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prediction_Regression.ProtoReflect.Descriptor instead.
func (*Prediction_Regression) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_model_prediction_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Prediction_Regression) GetValue() float32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *Prediction_Regression) GetGroundTruth() float32 {
	if x != nil && x.GroundTruth != nil {
		return *x.GroundTruth
	}
	return 0
}

type Prediction_Ranking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Predicted relevance (the higher, the most likely to be selected).
	Relevance            *float32 `protobuf:"fixed32,1,opt,name=relevance" json:"relevance,omitempty"`
	GroundTruthRelevance *float32 `protobuf:"fixed32,2,opt,name=ground_truth_relevance,json=groundTruthRelevance" json:"ground_truth_relevance,omitempty"`
	// Group of the predictions. Predictions with a same group are competing.
	//
	// Deprecated: Do not use.
	DeprecatedGroup *int32 `protobuf:"varint,3,opt,name=deprecated_group,json=deprecatedGroup" json:"deprecated_group,omitempty"`
	// Group of the predictions. Can be a categorical or a hash value.
	GroupId *uint64 `protobuf:"varint,4,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
}

func (x *Prediction_Ranking) Reset() {
	*x = Prediction_Ranking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_model_prediction_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Prediction_Ranking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prediction_Ranking) ProtoMessage() {}

func (x *Prediction_Ranking) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_model_prediction_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prediction_Ranking.ProtoReflect.Descriptor instead.
func (*Prediction_Ranking) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_model_prediction_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Prediction_Ranking) GetRelevance() float32 {
	if x != nil && x.Relevance != nil {
		return *x.Relevance
	}
	return 0
}

func (x *Prediction_Ranking) GetGroundTruthRelevance() float32 {
	if x != nil && x.GroundTruthRelevance != nil {
		return *x.GroundTruthRelevance
	}
	return 0
}

// Deprecated: Do not use.
func (x *Prediction_Ranking) GetDeprecatedGroup() int32 {
	if x != nil && x.DeprecatedGroup != nil {
		return *x.DeprecatedGroup
	}
	return 0
}

func (x *Prediction_Ranking) GetGroupId() uint64 {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return 0
}

type Prediction_Uplift struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Predicted treatment effect.
	//
	// treatment_effect[i] is the effect of the "i+1"-th treatment (categorical
	// value i+2) compared to the control group (0-th treatment; categorical
	// value = 1). The treatment out-of-vocabulary item (value = 0) is not taken
	// into account.
	TreatmentEffect []float32 `protobuf:"fixed32,1,rep,packed,name=treatment_effect,json=treatmentEffect" json:"treatment_effect,omitempty"`
	// Applied treatment. The control group is treatment = 1. Other treatments
	// are >1.
	Treatment *int32 `protobuf:"varint,2,opt,name=treatment" json:"treatment,omitempty"`
	// Outcome (with or without treatment).
	//
	// Types that are assignable to OutcomeType:
	//	*Prediction_Uplift_OutcomeCategorical
	//	*Prediction_Uplift_OutcomeNumerical
	OutcomeType isPrediction_Uplift_OutcomeType `protobuf_oneof:"outcome_type"`
}

func (x *Prediction_Uplift) Reset() {
	*x = Prediction_Uplift{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_model_prediction_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Prediction_Uplift) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prediction_Uplift) ProtoMessage() {}

func (x *Prediction_Uplift) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_model_prediction_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prediction_Uplift.ProtoReflect.Descriptor instead.
func (*Prediction_Uplift) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_model_prediction_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Prediction_Uplift) GetTreatmentEffect() []float32 {
	if x != nil {
		return x.TreatmentEffect
	}
	return nil
}

func (x *Prediction_Uplift) GetTreatment() int32 {
	if x != nil && x.Treatment != nil {
		return *x.Treatment
	}
	return 0
}

func (m *Prediction_Uplift) GetOutcomeType() isPrediction_Uplift_OutcomeType {
	if m != nil {
		return m.OutcomeType
	}
	return nil
}

func (x *Prediction_Uplift) GetOutcomeCategorical() int32 {
	if x, ok := x.GetOutcomeType().(*Prediction_Uplift_OutcomeCategorical); ok {
		return x.OutcomeCategorical
	}
	return 0
}

func (x *Prediction_Uplift) GetOutcomeNumerical() float32 {
	if x, ok := x.GetOutcomeType().(*Prediction_Uplift_OutcomeNumerical); ok {
		return x.OutcomeNumerical
	}
	return 0
}

type isPrediction_Uplift_OutcomeType interface {
	isPrediction_Uplift_OutcomeType()
}

type Prediction_Uplift_OutcomeCategorical struct {
	OutcomeCategorical int32 `protobuf:"varint,3,opt,name=outcome_categorical,json=outcomeCategorical,oneof"`
}

type Prediction_Uplift_OutcomeNumerical struct {
	OutcomeNumerical float32 `protobuf:"fixed32,4,opt,name=outcome_numerical,json=outcomeNumerical,oneof"`
}

func (*Prediction_Uplift_OutcomeCategorical) isPrediction_Uplift_OutcomeType() {}

func (*Prediction_Uplift_OutcomeNumerical) isPrediction_Uplift_OutcomeType() {}

var File_yggdrasil_decision_forests_model_prediction_proto protoreflect.FileDescriptor

var file_yggdrasil_decision_forests_model_prediction_proto_rawDesc = []byte{
	0x0a, 0x31, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2f, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x26, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69, 0x6c, 0x5f, 0x64,
	0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x73, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33, 0x79, 0x67, 0x67,
	0x64, 0x72, 0x61, 0x73, 0x69, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2f, 0x64, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xb8, 0x08, 0x0a, 0x0a, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x6b, 0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61,
	0x73, 0x69, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72,
	0x65, 0x73, 0x74, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5f, 0x0a, 0x0a,
	0x72, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3d, 0x2e, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69, 0x6c, 0x5f, 0x64, 0x65, 0x63,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x56, 0x0a,
	0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a,
	0x2e, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x72, 0x61,
	0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x53, 0x0a, 0x06, 0x75, 0x70, 0x6c, 0x69, 0x66, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69,
	0x6c, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73,
	0x74, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x6c, 0x69, 0x66, 0x74,
	0x48, 0x00, 0x52, 0x06, 0x75, 0x70, 0x6c, 0x69, 0x66, 0x74, 0x12, 0x19, 0x0a, 0x06, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x3a, 0x01, 0x31, 0x52, 0x06, 0x77,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x1a, 0xaf, 0x01, 0x0a, 0x0e, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x64, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69,
	0x6c, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73,
	0x74, 0x73, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f,
	0x74, 0x72, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x54, 0x72, 0x75, 0x74, 0x68, 0x1a, 0x45, 0x0a, 0x0a, 0x52, 0x65, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x72, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x72, 0x75, 0x74, 0x68, 0x1a,
	0xa7, 0x01, 0x0a, 0x07, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x6c, 0x65, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09,
	0x72, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x74, 0x72, 0x75, 0x74, 0x68, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x76, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x14, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x54, 0x72, 0x75, 0x74, 0x68, 0x52, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x2d, 0x0a, 0x10, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0f, 0x64,
	0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x1a, 0xc7, 0x01, 0x0a, 0x06, 0x55, 0x70,
	0x6c, 0x69, 0x66, 0x74, 0x12, 0x2d, 0x0a, 0x10, 0x74, 0x72, 0x65, 0x61, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x02, 0x42, 0x02,
	0x10, 0x01, 0x52, 0x0f, 0x74, 0x72, 0x65, 0x61, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x65, 0x61, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x72, 0x65, 0x61, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x31, 0x0a, 0x13, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x5f, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00,
	0x52, 0x12, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x63, 0x61, 0x6c, 0x12, 0x2d, 0x0a, 0x11, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x48,
	0x00, 0x52, 0x10, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69,
	0x63, 0x61, 0x6c, 0x42, 0x0e, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
}

var (
	file_yggdrasil_decision_forests_model_prediction_proto_rawDescOnce sync.Once
	file_yggdrasil_decision_forests_model_prediction_proto_rawDescData = file_yggdrasil_decision_forests_model_prediction_proto_rawDesc
)

func file_yggdrasil_decision_forests_model_prediction_proto_rawDescGZIP() []byte {
	file_yggdrasil_decision_forests_model_prediction_proto_rawDescOnce.Do(func() {
		file_yggdrasil_decision_forests_model_prediction_proto_rawDescData = protoimpl.X.CompressGZIP(file_yggdrasil_decision_forests_model_prediction_proto_rawDescData)
	})
	return file_yggdrasil_decision_forests_model_prediction_proto_rawDescData
}

var file_yggdrasil_decision_forests_model_prediction_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_yggdrasil_decision_forests_model_prediction_proto_goTypes = []interface{}{
	(*Prediction)(nil),                     // 0: yggdrasil_decision_forests.model.proto.Prediction
	(*Prediction_Classification)(nil),      // 1: yggdrasil_decision_forests.model.proto.Prediction.Classification
	(*Prediction_Regression)(nil),          // 2: yggdrasil_decision_forests.model.proto.Prediction.Regression
	(*Prediction_Ranking)(nil),             // 3: yggdrasil_decision_forests.model.proto.Prediction.Ranking
	(*Prediction_Uplift)(nil),              // 4: yggdrasil_decision_forests.model.proto.Prediction.Uplift
	(*proto.IntegerDistributionFloat)(nil), // 5: yggdrasil_decision_forests.utils.proto.IntegerDistributionFloat
}
var file_yggdrasil_decision_forests_model_prediction_proto_depIdxs = []int32{
	1, // 0: yggdrasil_decision_forests.model.proto.Prediction.classification:type_name -> yggdrasil_decision_forests.model.proto.Prediction.Classification
	2, // 1: yggdrasil_decision_forests.model.proto.Prediction.regression:type_name -> yggdrasil_decision_forests.model.proto.Prediction.Regression
	3, // 2: yggdrasil_decision_forests.model.proto.Prediction.ranking:type_name -> yggdrasil_decision_forests.model.proto.Prediction.Ranking
	4, // 3: yggdrasil_decision_forests.model.proto.Prediction.uplift:type_name -> yggdrasil_decision_forests.model.proto.Prediction.Uplift
	5, // 4: yggdrasil_decision_forests.model.proto.Prediction.Classification.distribution:type_name -> yggdrasil_decision_forests.utils.proto.IntegerDistributionFloat
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_yggdrasil_decision_forests_model_prediction_proto_init() }
func file_yggdrasil_decision_forests_model_prediction_proto_init() {
	if File_yggdrasil_decision_forests_model_prediction_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yggdrasil_decision_forests_model_prediction_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Prediction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yggdrasil_decision_forests_model_prediction_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Prediction_Classification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yggdrasil_decision_forests_model_prediction_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Prediction_Regression); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yggdrasil_decision_forests_model_prediction_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Prediction_Ranking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yggdrasil_decision_forests_model_prediction_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Prediction_Uplift); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_yggdrasil_decision_forests_model_prediction_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Prediction_Classification_)(nil),
		(*Prediction_Regression_)(nil),
		(*Prediction_Ranking_)(nil),
		(*Prediction_Uplift_)(nil),
	}
	file_yggdrasil_decision_forests_model_prediction_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*Prediction_Uplift_OutcomeCategorical)(nil),
		(*Prediction_Uplift_OutcomeNumerical)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yggdrasil_decision_forests_model_prediction_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yggdrasil_decision_forests_model_prediction_proto_goTypes,
		DependencyIndexes: file_yggdrasil_decision_forests_model_prediction_proto_depIdxs,
		MessageInfos:      file_yggdrasil_decision_forests_model_prediction_proto_msgTypes,
	}.Build()
	File_yggdrasil_decision_forests_model_prediction_proto = out.File
	file_yggdrasil_decision_forests_model_prediction_proto_rawDesc = nil
	file_yggdrasil_decision_forests_model_prediction_proto_goTypes = nil
	file_yggdrasil_decision_forests_model_prediction_proto_depIdxs = nil
}
