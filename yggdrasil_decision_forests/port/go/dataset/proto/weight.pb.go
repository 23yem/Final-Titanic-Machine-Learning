//
// Copyright 2022 Google LLC.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Definition of the weights of the examples. A weight definition is
// essentially a mapping from an example to a integer value. Weighting is used
// training and evaluation.
//
// "WeightDefinition" is a weight definition provided by the user.
// "LinkedWeightDefinition" is a pre-processed version of "WeightDefinition"
// that is only used internally in the code.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.4
// source: yggdrasil_decision_forests/dataset/weight.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WeightDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [Required] Name of the attribute that controls the weights of the examples.
	Attribute *string `protobuf:"bytes,1,opt,name=attribute" json:"attribute,omitempty"`
	// Types that are assignable to Type:
	//	*WeightDefinition_Numerical
	//	*WeightDefinition_Categorical
	Type isWeightDefinition_Type `protobuf_oneof:"type"`
}

func (x *WeightDefinition) Reset() {
	*x = WeightDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_dataset_weight_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeightDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeightDefinition) ProtoMessage() {}

func (x *WeightDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_dataset_weight_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeightDefinition.ProtoReflect.Descriptor instead.
func (*WeightDefinition) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_dataset_weight_proto_rawDescGZIP(), []int{0}
}

func (x *WeightDefinition) GetAttribute() string {
	if x != nil && x.Attribute != nil {
		return *x.Attribute
	}
	return ""
}

func (m *WeightDefinition) GetType() isWeightDefinition_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *WeightDefinition) GetNumerical() *WeightDefinition_NumericalWeight {
	if x, ok := x.GetType().(*WeightDefinition_Numerical); ok {
		return x.Numerical
	}
	return nil
}

func (x *WeightDefinition) GetCategorical() *WeightDefinition_CategoricalWeight {
	if x, ok := x.GetType().(*WeightDefinition_Categorical); ok {
		return x.Categorical
	}
	return nil
}

type isWeightDefinition_Type interface {
	isWeightDefinition_Type()
}

type WeightDefinition_Numerical struct {
	// The attribute is interpreted as a numerical value.
	Numerical *WeightDefinition_NumericalWeight `protobuf:"bytes,2,opt,name=numerical,oneof"`
}

type WeightDefinition_Categorical struct {
	// The attribute is interpreted as a categorical attribute. A weight is
	// defined for each possible value.
	Categorical *WeightDefinition_CategoricalWeight `protobuf:"bytes,3,opt,name=categorical,oneof"`
}

func (*WeightDefinition_Numerical) isWeightDefinition_Type() {}

func (*WeightDefinition_Categorical) isWeightDefinition_Type() {}

// Internal linked version of the weight definition. The attributes and values
// are indexed according to the dataspec.
type LinkedWeightDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Attribute index used to compute the weight.
	AttributeIdx *int32 `protobuf:"varint,1,opt,name=attribute_idx,json=attributeIdx" json:"attribute_idx,omitempty"`
	// Types that are assignable to Type:
	//	*LinkedWeightDefinition_Numerical
	//	*LinkedWeightDefinition_Categorical
	Type isLinkedWeightDefinition_Type `protobuf_oneof:"type"`
}

func (x *LinkedWeightDefinition) Reset() {
	*x = LinkedWeightDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_dataset_weight_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkedWeightDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkedWeightDefinition) ProtoMessage() {}

func (x *LinkedWeightDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_dataset_weight_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkedWeightDefinition.ProtoReflect.Descriptor instead.
func (*LinkedWeightDefinition) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_dataset_weight_proto_rawDescGZIP(), []int{1}
}

func (x *LinkedWeightDefinition) GetAttributeIdx() int32 {
	if x != nil && x.AttributeIdx != nil {
		return *x.AttributeIdx
	}
	return 0
}

func (m *LinkedWeightDefinition) GetType() isLinkedWeightDefinition_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *LinkedWeightDefinition) GetNumerical() *LinkedWeightDefinition_NumericalWeight {
	if x, ok := x.GetType().(*LinkedWeightDefinition_Numerical); ok {
		return x.Numerical
	}
	return nil
}

func (x *LinkedWeightDefinition) GetCategorical() *LinkedWeightDefinition_CategoricalWeight {
	if x, ok := x.GetType().(*LinkedWeightDefinition_Categorical); ok {
		return x.Categorical
	}
	return nil
}

type isLinkedWeightDefinition_Type interface {
	isLinkedWeightDefinition_Type()
}

type LinkedWeightDefinition_Numerical struct {
	// Weight definition if the controlling attribute is a numerical attribute.
	Numerical *LinkedWeightDefinition_NumericalWeight `protobuf:"bytes,2,opt,name=numerical,oneof"`
}

type LinkedWeightDefinition_Categorical struct {
	// Weight definition if the controlling attribute is a categorical
	// attribute.
	Categorical *LinkedWeightDefinition_CategoricalWeight `protobuf:"bytes,3,opt,name=categorical,oneof"`
}

func (*LinkedWeightDefinition_Numerical) isLinkedWeightDefinition_Type() {}

func (*LinkedWeightDefinition_Categorical) isLinkedWeightDefinition_Type() {}

// The weight is directly the numerical value.
type WeightDefinition_NumericalWeight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WeightDefinition_NumericalWeight) Reset() {
	*x = WeightDefinition_NumericalWeight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_dataset_weight_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeightDefinition_NumericalWeight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeightDefinition_NumericalWeight) ProtoMessage() {}

func (x *WeightDefinition_NumericalWeight) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_dataset_weight_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeightDefinition_NumericalWeight.ProtoReflect.Descriptor instead.
func (*WeightDefinition_NumericalWeight) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_dataset_weight_proto_rawDescGZIP(), []int{0, 0}
}

// Solve the following mapping to get the weight.
type WeightDefinition_CategoricalWeight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Pair of categorical value and weight.
	Items []*WeightDefinition_CategoricalWeight_Item `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (x *WeightDefinition_CategoricalWeight) Reset() {
	*x = WeightDefinition_CategoricalWeight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_dataset_weight_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeightDefinition_CategoricalWeight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeightDefinition_CategoricalWeight) ProtoMessage() {}

func (x *WeightDefinition_CategoricalWeight) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_dataset_weight_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeightDefinition_CategoricalWeight.ProtoReflect.Descriptor instead.
func (*WeightDefinition_CategoricalWeight) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_dataset_weight_proto_rawDescGZIP(), []int{0, 1}
}

func (x *WeightDefinition_CategoricalWeight) GetItems() []*WeightDefinition_CategoricalWeight_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type WeightDefinition_CategoricalWeight_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [Required] A value to map to a corresponding weight.
	Value *string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
	// [Required] The weight.
	Weight *float32 `protobuf:"fixed32,3,opt,name=weight" json:"weight,omitempty"`
}

func (x *WeightDefinition_CategoricalWeight_Item) Reset() {
	*x = WeightDefinition_CategoricalWeight_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_dataset_weight_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeightDefinition_CategoricalWeight_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeightDefinition_CategoricalWeight_Item) ProtoMessage() {}

func (x *WeightDefinition_CategoricalWeight_Item) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_dataset_weight_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeightDefinition_CategoricalWeight_Item.ProtoReflect.Descriptor instead.
func (*WeightDefinition_CategoricalWeight_Item) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_dataset_weight_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *WeightDefinition_CategoricalWeight_Item) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *WeightDefinition_CategoricalWeight_Item) GetWeight() float32 {
	if x != nil && x.Weight != nil {
		return *x.Weight
	}
	return 0
}

type LinkedWeightDefinition_NumericalWeight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LinkedWeightDefinition_NumericalWeight) Reset() {
	*x = LinkedWeightDefinition_NumericalWeight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_dataset_weight_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkedWeightDefinition_NumericalWeight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkedWeightDefinition_NumericalWeight) ProtoMessage() {}

func (x *LinkedWeightDefinition_NumericalWeight) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_dataset_weight_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkedWeightDefinition_NumericalWeight.ProtoReflect.Descriptor instead.
func (*LinkedWeightDefinition_NumericalWeight) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_dataset_weight_proto_rawDescGZIP(), []int{1, 0}
}

type LinkedWeightDefinition_CategoricalWeight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Index of "categorical_mapping". Maps a weight value for each categorical
	// attribute value. See the dataspec for the mapping attribute value string
	// to attribute value index.
	CategoricalValueIdx_2Weight []float32 `protobuf:"fixed32,1,rep,packed,name=categorical_value_idx_2_weight,json=categoricalValueIdx2Weight" json:"categorical_value_idx_2_weight,omitempty"`
}

func (x *LinkedWeightDefinition_CategoricalWeight) Reset() {
	*x = LinkedWeightDefinition_CategoricalWeight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yggdrasil_decision_forests_dataset_weight_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkedWeightDefinition_CategoricalWeight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkedWeightDefinition_CategoricalWeight) ProtoMessage() {}

func (x *LinkedWeightDefinition_CategoricalWeight) ProtoReflect() protoreflect.Message {
	mi := &file_yggdrasil_decision_forests_dataset_weight_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkedWeightDefinition_CategoricalWeight.ProtoReflect.Descriptor instead.
func (*LinkedWeightDefinition_CategoricalWeight) Descriptor() ([]byte, []int) {
	return file_yggdrasil_decision_forests_dataset_weight_proto_rawDescGZIP(), []int{1, 1}
}

func (x *LinkedWeightDefinition_CategoricalWeight) GetCategoricalValueIdx_2Weight() []float32 {
	if x != nil {
		return x.CategoricalValueIdx_2Weight
	}
	return nil
}

var File_yggdrasil_decision_forests_dataset_weight_proto protoreflect.FileDescriptor

var file_yggdrasil_decision_forests_dataset_weight_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x2f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x28, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69, 0x6c, 0x5f, 0x64, 0x65, 0x63,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xde, 0x03, 0x0a, 0x10,
	0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x6a,
	0x0a, 0x09, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x4a, 0x2e, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69, 0x6c, 0x5f, 0x64, 0x65,
	0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4e, 0x75,
	0x6d, 0x65, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x48, 0x00, 0x52,
	0x09, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x70, 0x0a, 0x0b, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x4c, 0x2e, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x48, 0x00, 0x52,
	0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x1a, 0x11, 0x0a, 0x0f,
	0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x1a,
	0xb2, 0x01, 0x0a, 0x11, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x57,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x67, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69, 0x6c,
	0x5f, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74,
	0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x57, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x34,
	0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x9f, 0x03, 0x0a,
	0x16, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x49, 0x64, 0x78, 0x12, 0x70, 0x0a, 0x09,
	0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x50, 0x2e, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x65,
	0x64, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x57, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x48, 0x00, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x76,
	0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x52, 0x2e, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69, 0x6c, 0x5f,
	0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x73, 0x74, 0x73,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c,
	0x69, 0x6e, 0x6b, 0x65, 0x64, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x63, 0x61,
	0x6c, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x1a, 0x11, 0x0a, 0x0f, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69,
	0x63, 0x61, 0x6c, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x1a, 0x5b, 0x0a, 0x11, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x46,
	0x0a, 0x1e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x78, 0x5f, 0x32, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x02, 0x42, 0x02, 0x10, 0x01, 0x52, 0x1a, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x64, 0x78, 0x32,
	0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
}

var (
	file_yggdrasil_decision_forests_dataset_weight_proto_rawDescOnce sync.Once
	file_yggdrasil_decision_forests_dataset_weight_proto_rawDescData = file_yggdrasil_decision_forests_dataset_weight_proto_rawDesc
)

func file_yggdrasil_decision_forests_dataset_weight_proto_rawDescGZIP() []byte {
	file_yggdrasil_decision_forests_dataset_weight_proto_rawDescOnce.Do(func() {
		file_yggdrasil_decision_forests_dataset_weight_proto_rawDescData = protoimpl.X.CompressGZIP(file_yggdrasil_decision_forests_dataset_weight_proto_rawDescData)
	})
	return file_yggdrasil_decision_forests_dataset_weight_proto_rawDescData
}

var file_yggdrasil_decision_forests_dataset_weight_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_yggdrasil_decision_forests_dataset_weight_proto_goTypes = []interface{}{
	(*WeightDefinition)(nil),                         // 0: yggdrasil_decision_forests.dataset.proto.WeightDefinition
	(*LinkedWeightDefinition)(nil),                   // 1: yggdrasil_decision_forests.dataset.proto.LinkedWeightDefinition
	(*WeightDefinition_NumericalWeight)(nil),         // 2: yggdrasil_decision_forests.dataset.proto.WeightDefinition.NumericalWeight
	(*WeightDefinition_CategoricalWeight)(nil),       // 3: yggdrasil_decision_forests.dataset.proto.WeightDefinition.CategoricalWeight
	(*WeightDefinition_CategoricalWeight_Item)(nil),  // 4: yggdrasil_decision_forests.dataset.proto.WeightDefinition.CategoricalWeight.Item
	(*LinkedWeightDefinition_NumericalWeight)(nil),   // 5: yggdrasil_decision_forests.dataset.proto.LinkedWeightDefinition.NumericalWeight
	(*LinkedWeightDefinition_CategoricalWeight)(nil), // 6: yggdrasil_decision_forests.dataset.proto.LinkedWeightDefinition.CategoricalWeight
}
var file_yggdrasil_decision_forests_dataset_weight_proto_depIdxs = []int32{
	2, // 0: yggdrasil_decision_forests.dataset.proto.WeightDefinition.numerical:type_name -> yggdrasil_decision_forests.dataset.proto.WeightDefinition.NumericalWeight
	3, // 1: yggdrasil_decision_forests.dataset.proto.WeightDefinition.categorical:type_name -> yggdrasil_decision_forests.dataset.proto.WeightDefinition.CategoricalWeight
	5, // 2: yggdrasil_decision_forests.dataset.proto.LinkedWeightDefinition.numerical:type_name -> yggdrasil_decision_forests.dataset.proto.LinkedWeightDefinition.NumericalWeight
	6, // 3: yggdrasil_decision_forests.dataset.proto.LinkedWeightDefinition.categorical:type_name -> yggdrasil_decision_forests.dataset.proto.LinkedWeightDefinition.CategoricalWeight
	4, // 4: yggdrasil_decision_forests.dataset.proto.WeightDefinition.CategoricalWeight.items:type_name -> yggdrasil_decision_forests.dataset.proto.WeightDefinition.CategoricalWeight.Item
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_yggdrasil_decision_forests_dataset_weight_proto_init() }
func file_yggdrasil_decision_forests_dataset_weight_proto_init() {
	if File_yggdrasil_decision_forests_dataset_weight_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yggdrasil_decision_forests_dataset_weight_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeightDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yggdrasil_decision_forests_dataset_weight_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkedWeightDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yggdrasil_decision_forests_dataset_weight_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeightDefinition_NumericalWeight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yggdrasil_decision_forests_dataset_weight_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeightDefinition_CategoricalWeight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yggdrasil_decision_forests_dataset_weight_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeightDefinition_CategoricalWeight_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yggdrasil_decision_forests_dataset_weight_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkedWeightDefinition_NumericalWeight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yggdrasil_decision_forests_dataset_weight_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkedWeightDefinition_CategoricalWeight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_yggdrasil_decision_forests_dataset_weight_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*WeightDefinition_Numerical)(nil),
		(*WeightDefinition_Categorical)(nil),
	}
	file_yggdrasil_decision_forests_dataset_weight_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*LinkedWeightDefinition_Numerical)(nil),
		(*LinkedWeightDefinition_Categorical)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yggdrasil_decision_forests_dataset_weight_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yggdrasil_decision_forests_dataset_weight_proto_goTypes,
		DependencyIndexes: file_yggdrasil_decision_forests_dataset_weight_proto_depIdxs,
		MessageInfos:      file_yggdrasil_decision_forests_dataset_weight_proto_msgTypes,
	}.Build()
	File_yggdrasil_decision_forests_dataset_weight_proto = out.File
	file_yggdrasil_decision_forests_dataset_weight_proto_rawDesc = nil
	file_yggdrasil_decision_forests_dataset_weight_proto_goTypes = nil
	file_yggdrasil_decision_forests_dataset_weight_proto_depIdxs = nil
}
